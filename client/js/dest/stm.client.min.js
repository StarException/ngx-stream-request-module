!function(e){"use strict";function t(){this.reqID=0,this.state=o.Success,this.data=null}var n=e.stm=e.stm||{},o={Success:0,Failed:1};n.Response=t,n.Response.State=o}(this),function(e){"use strict";var t=e.stm=e.stm||{};t.ContentProtocol={onOpen:function(e){e()},onClose:function(){},parse:function(e){return new t.Response},build:function(e,t,n){return new ArrayBuffer(2)},buildFailedMessage:function(e,t){return new ArrayBuffer(2)},extend:function(e){if(e.__proto__)e.__proto__=this;else{for(var t in this)this.hasOwnProperty(t)&&!e.hasOwnProperty(t)&&(e[t]=this[t]);this.hasOwnProperty("toString")&&!e.hasOwnProperty("toString")&&(e.toString=this.toString)}return e.$parent=this,e}}}(this),function(e){"use strict";var t=e.stm=e.stm||{};t.DefaultContentProtocol={parse:function(e){var n=new t.Response,o=new DataView(e);return n.reqID=o.getUint32(0),n.state=0==o.getUint8(4)?t.Response.State.Success:t.Response.State.Failed,n.data=e.slice(5),n},build:function(e,t,n){if(e=e||"","string"!=typeof e&&!(e instanceof ArrayBuffer))return"body type is error, must be string or ArrayBuffer";if(t=t||{},"object"!=typeof t)return"headers must be a object type, for example {uri: '/location'}";var o=0;for(var r in t)if(t.hasOwnProperty(r)){if("string"!=typeof r||"string"!=typeof t[r])return"headers' key or property must be string";if(r.length>255)return"length of headers' key <"+r+"> more than 255";if(t[r].length>255)return"length of headers' object <"+t[r]+"> more than 255";0!=r.length&&0!=t[r].length&&(o+=2+r.length+t[r].length)}e=new StringView(e);var i=new ArrayBuffer(4+e.rawData.byteLength+1+o);new DataView(i).setUint32(0,n);var s=4;for(r in t)t.hasOwnProperty(r)&&(new DataView(i).setUint8(s,r.length),s++,new Uint8Array(i).set(new StringView(r).rawData,s),s+=r.length,new DataView(i).setUint8(s,t[r].length),s++,new Uint8Array(i).set(new StringView(t[r]).rawData,s),s+=t[r].length);return new DataView(i).setUint8(s,0),s++,new Uint8Array(i).set(e.rawData,s),i},buildFailedMessage:function(e,n){e=new StringView(e);var o=new ArrayBuffer(4+e.rawData.byteLength+1);return new DataView(o).setUint32(0,n),new DataView(o).setUint8(4,t.Response.State.Failed),new Uint8Array(o).set(e.rawData,5),o}}}(this),function(e){"use strict";function t(e,t,n,o,r,i){this.body=e||"",this.headers=n||{},this.onSuccess=t||function(e){},this.onFailed=o||function(e){},this.onComplete=r||function(){},this.reqID=i}function n(){function e(e){e.net_=null,e.netArgs_="",e.requests_=Object.create(null),e.protocol_=f.ContentProtocol.extend(f.DefaultContentProtocol),e.blockRequest_=null,e.isBlock_=!1,e.reqID_=s,e.onConnectionSuc_=function(){},e.onConnectionFaild_=function(e){},e.normalOnMessage_=function(e){},e.connectTimeout_=30}e(this),this.onPush=function(e){}}function o(e){return new i(e)}function r(e){setTimeout(e,0)}function i(e){this.client_=e}if("function"!=typeof StringView)return void console.error("can not find StringView. this error maybe cause 'stm.Client is not a constructor'. you can find in https://developer.mozilla.org/en-US/Add-ons/Code_snippets/StringView or https://github.com/madmurphy/stringview.js");var s=200,a=s-1,u=1,c=n.prototype;c.setConnectArgs=function(e,t,n){this.netArgs_=e,this.onConnectionFaild_=n||function(e){},this.onConnectionSuc_=t||function(){}},c.setConfig=function(e){this.connectTimeout_=e},c.setBlockRequestOnConnected=function(e,n,o,r,i){this.blockRequest_=new t(e,n,o,r,i,a)},c.addRequest=function(e,n,r,i,s){if(null==this.netArgs_)return"function"==typeof s&&s(),void("function"==typeof i&&i("net args not set"));var a=o(this).getReqID();return this.requests_[a.toString()]=new t(e,n,r,i,s,a),this.isBlock_?void 0:null!=this.net_&&this.net_.readyState==WebSocket.OPEN?void o(this).sendRequest(this.requests_[a.toString()]):void(null!=this.net_&&this.net_.readyState==WebSocket.CONNECTING||o(this).connect())};var l=i.prototype;l.getReqID=function(){return this.client_.reqID_++,this.client_.reqID_<s&&(this.client_.reqID_=s),this.client_.reqID_},l.sendRequest=function(e){var t=this.client_,n=t.protocol_.build(e.body,e.headers,e.reqID);return"string"==typeof n?void r(function(){var o=t.protocol_.buildFailedMessage(n,e.reqID);t.net_.onmessage({data:o})}):void t.net_.send(n)},l.connect=function(){var e=this.client_;this.client_.normalOnMessage_=function(t){var n=e.protocol_.parse(t);if(n.reqID==u)return void e.onPush(n.data);var o=e.requests_[n.reqID.toString()];return null==o?void console.error("not find request for reqID<"+n.reqID+">"):(o.onComplete(),n.state!=f.Response.State.Success?null===n.data||void 0===n.data?o.onFailed("may be server error, but server has closed the error log"):o.onFailed(new StringView(n.data).toString()):o.onSuccess(n.data),void delete o[n.reqID.toString()])},this.client_.net_=new WebSocket(this.client_.netArgs_),e.net_.haserror=!1,e.net_.binaryType="arraybuffer",e.net_.onmessage=function(t){e.normalOnMessage_(t.data)};var t=setTimeout(function(){e.net_.timeout()},1e3*e.connectTimeout_),n=this;e.net_.onopen=function(o){null!=t&&(clearTimeout(t),t=null),null!=e.blockRequest_?n.sendBlockRequest():n.sendAllRequest(),e.protocol_.onOpen(e.onConnectionSuc_)},e.net_.onclose=function(o){null!=t&&(clearTimeout(t),t=null),e.net_.readyState==WebSocket.OPEN&&(e.net_.close(1e3),e.protocol_.onClose(),e.net_.haserror||(e.net_.haserror=!1,n.netError("connection closed by peer or connection error")))},e.net_.onerror=function(o){e.net_.haserror=!0,null!=t&&(clearTimeout(t),t=null),n.netError("connect error---"+JSON.stringify(o))},e.net_.timeout=function(o){t=null,this.onopen=function(e){},this.onclose=function(e){},this.onerror=function(e){},this.onmessage=function(e){},e.net_=null,n.netError("connect timeout")}},l.sendAllRequest=function(){var e=this.client_;for(var t in e.requests_)this.sendRequest(e.requests_[t])},l.sendBlockRequest=function(){var e=this.client_;e.isBlock_=!0;var t=this,n=function(n){var o=e.protocol_.parse(n),r=!0,i=!0,s=e.blockRequest_;s.onComplete(),o.state!=f.Response.State.Success?(i=!1,null===o.data||void 0===o.data?s.onFailed("may be server error, but server has closed the error log"):s.onFailed(new StringView(o.data).toString())):r=!(s.onSuccess(o.data)===!1),r=r&&i,i||t.errorAllRequest("block request error---"+new StringView(o.data).toString()),r?t.sendAllRequest():i&&t.errorAllRequest("block request stop this request continuing"),e.isBlock_=!1,e.net_.onmessage=function(t){e.normalOnMessage_(t.data)}};e.net_.onmessage=function(e){n(e.data)},this.sendRequest(e.blockRequest_)},l.errorAllRequest=function(e){var t=this.client_;for(var n in t.requests_)!function(n){r(function(){t.normalOnMessage_(t.protocol_.buildFailedMessage(e,n))})}(Number(n))},l.netError=function(e){var t=this.client_;t.isBlock_&&r(function(){var n=t.protocol_.buildFailedMessage(e,a);t.net_.onmessage({data:n})}),this.errorAllRequest(e),t.onConnectionFaild_(e)};var f=e.stm=e.stm||{};f.Client=n}(this);